- hosts: localhost

  vars_files:
    - vault.yml
    - vars.yml

  handlers:
    - name: Restart postgresql
      ansible.builtin.systemd:
        name: postgresql
        state: restarted

  tasks:
    - name: Install PostgreSQL and psycopg2
      ansible.builtin.dnf:
        name: postgresql-server,postgresql-contrib,python3-psycopg2
        state: present
        update_cache: true

    - name: Create the cluster
      ansible.builtin.command:
        cmd: postgresql-setup --initdb
        creates: /var/lib/pgsql/data/PG_VERSION

    - name: Start and enable the service
      ansible.builtin.systemd:
        name: postgresql
        state: started
        enabled: true

    - name: Create the databases
      community.postgresql.postgresql_db:
        name: "{{ item }}"
        encoding: "UTF-8"
      become: true
      become_user: postgres
      with_items: "{{ postgresql_databases }}"

    - name: Create the users
      community.postgresql.postgresql_user:
        db: "{{ item.db }}"
        name: "{{ item.name }}"
        password: "{{ item.password | default(omit) }}"
      become: true
      become_user: postgres
      environment:
        PGOPTIONS: "-c password_encryption=scram-sha-256"
      with_items: "{{ postgresql_users }}"

    - name: Create the schemas
      community.postgresql.postgresql_schema:
        db: "{{ item.db }}"
        name: "{{ item.name }}"
        owner: "{{ item.name }}"
      become: true
      become_user: postgres
      with_items: "{{ postgresql_schemas }}"

    - name: Set the user privileges
      community.postgresql.postgresql_privs:
        database: "{{ item.db }}"
        state: present
        objs: "{{ item.objs | default(omit) }}"
        privs: "{{ item.privs }}"
        type: "{{ item.type | default(omit) }}"
        roles: "{{ item.roles | default(omit) }}"
      become: true
      become_user: postgres
      with_items: "{{ postgresql_privs | default([]) }}"

    - name: Add entries to pg_hba
      community.postgresql.postgresql_pg_hba:
        dest: "/var/lib/pgsql/data/pg_hba.conf"
        address: "{{ item.address | default(omit) }}"
        contype: "{{ item.contype }}"
        databases: "{{ item.databases }}"
        method: "{{ item.method }}"
        users: "{{ item.users }}"
      become: true
      become_user: postgres
      with_items: "{{ postgresql_hba_entries }}"
      notify:
        - Restart postgresql

    - name: Enable the HSTORE extension
      community.postgresql.postgresql_ext:
        name: "{{ item.name }}"
        db: "{{ item.db }}"
        state: present
      become: true
      become_user: postgres
      with_items: "{{ postgresql_extensions | default([]) }}"
      notify:
        - Restart postgresql
